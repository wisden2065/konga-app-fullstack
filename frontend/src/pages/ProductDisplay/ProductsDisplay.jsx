import { faChevronLeft, faChevronRight, faL, faMinus, faNairaSign, faSearch, faSlidersH } from '@fortawesome/free-solid-svg-icons'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import './ProductDisplay.css'
import Product from '../../components/Product/Product'
import { useContext, useEffect, useRef, useState } from 'react'
import ProductContextProvider, { ProductContext } from '../../context/ProductContext'
import topBanner from '../../assets/images/ProductsWebBanner.webp'
// import { product_list } from '../../assets/images/products'
import {Helmet} from "react-helmet";
import { getProducts } from '../../assets/images/products.js'
import Skeleton from 'react-loading-skeleton'
import 'react-loading-skeleton/dist/skeleton.css'
import { useParams } from 'react-router-dom'



const Products = ({category}) => {
    // holds the state of all the displayed checkbox-if checked or not 
    const [checked, setChecked] = useState([])
    
    // holds a unique set of current filtered brands dynamically generated by performBrandFiltering function
    const [currentFilteredBrands, setCurrentFilteredBrands] = useState(new Set())

    // checks if any of the checkbox is checked or not
    const [isActiveCheckBox, setActiveCheckBox] = useState(false);

    // state to sort products by relevance
    const [sortState, setSortState] = useState('relevance')


    // holds and sets the state and value of the current product category
    const { activeProdCat, setActiveProdCat } = useContext(ProductContext)

    // hold the values of all product list to be rendered in the this component
    // const {product_list} = useContext(ProductContext);   // commented this to implement loading state --uncomment 


    // initial product array empty on mount
    const [product_list, setProductList] = useState([]);
    // loading states- simulating lazy loading
    const [isLoading, setIsLoading] = useState(true)

    // extracts the product Category form the url parameter if we have a route like '/category/fashion'
    const {health, laptops, kitchen, kids} = useParams()
      // Pagination
      const PAGE_SIZE = 24;  //size for number of Products per page
      const totalNoOfProducts = product_list.length;
      const numOfPages = Math.ceil(totalNoOfProducts / PAGE_SIZE);
      console.log("Number of Pages", numOfPages)
      // state for current page
      const [currentPage, setCurrentPage] = useState(0);
      const start = currentPage * PAGE_SIZE;
      const end = (currentPage +1) * PAGE_SIZE;
  
      // change page with arrow Next
      const goToNext = ()=>{
          console.log(currentPage)
           setCurrentPage(prev=>prev + 1)
      }
      const goToPrev = ()=>{
          setCurrentPage(prev=>prev -1)
      }


    // loads the produscts to the product array
    useEffect(()=>{
        setIsLoading(true)

        getProducts()
            .then((prod)=>{
                setProductList(prod)
                setIsLoading(false)
            })
        window.scrollTo(0, 200)
        
    }, [currentPage])

    // finds all the products in the current selected Product brand category 
    const performBrandFiltering=()=>{

        const filteredBrands = new Set();
        product_list.map((prod)=>{
            if(prod.Product_category == health){
                // filteredBrands.add(prod.Product_Brand)
                console.log('Yes param is health!')
            }
            if(prod.Product_category == activeProdCat || activeProdCat == 'all' ){
                filteredBrands.add(prod.Product_Brand);
            }
          
        setCurrentFilteredBrands(filteredBrands)
    })}

//    call the above function anytime a state changes
    useEffect(()=>{
        performBrandFiltering() //::function invocation to dynamically update the available brands for a category
        // isAnyChecked()
    }, [activeProdCat, product_list])

    // Dynamically updated product brands on click of any of the checkboxes in brand categories
    const handleChange =(brand)=>{
        // remove target checkbox from our array of checked list if target is already in the array
        if(checked.includes(brand)){
            setChecked(checked.filter(c=> c !== brand))
        }
        else{
            setChecked([...checked, brand])
        }
        // anyActiveCheckbox()
    }
    // find if there is any active checkbox
   useEffect(()=>{
        if(checked.length == 0){
            setActiveCheckBox(false)
        }
        else if(checked.length > 0){
            setActiveCheckBox(true)
        }
    }, [checked])

    const findBrand =(brand)=>{
    //   only do this when the input search is not empty
        if(brand != ''){
            let brandsArray = Array.from(currentFilteredBrands);
            let filter = brandsArray.filter((b)=>{
                return b.toLowerCase().includes(brand.toLowerCase())
            })
            console.log(filter)
            setCurrentFilteredBrands(filter)
        }
        else{
            performBrandFiltering()
        }
    }

  

    // const [currentProd, setCurrentProd] = useState([product_list.slice(currentPage, PAGE_SIZE)])
    // as soon as currentPage changes we update the UI
    useEffect(()=>{

        // setCurrentProd(currentPage, PAGE_SIZE)
        console.log('Current Page:',currentPage)
        // console.log('Current Page:',typeof(currentPage.target?.innerHTML))
    },[currentPage])

  return (
    <>
            <Helmet>
                <meta charSet="utf-8" />
                <meta name='title' content='Prodcut Display - Apple'/>
                <meta name='description' content='This page display all of the Apple IOs dat mdjfdkfdfd'/>
                <title>Product Display - Apple</title>
                <link rel="canonical" href="http://mysite.com/example" />
            </Helmet>

            <div className='all-products-cont'>
            <div className='current-prod-active position-relative'>
                <div className='' id="innerPhone" >
                    <a className='d-flex align-items-center gap-2 text-center text-body-tertiary'>Home <FontAwesomeIcon icon={faChevronRight} style={{fontSize: 8 + 'px'}} /> <a  className='active-cat'>{activeProdCat == 'all'? activeProdCat.charAt(0).toUpperCase() + activeProdCat.slice(1) + ' Products': activeProdCat.charAt(0).toUpperCase() + activeProdCat.slice(1)}</a></a>
                    <span id='filter'>1 - 4 of <span>1000 results</span></span>
                </div>
                <div className='current-category'>
                    <h3 style={{fontWeight:700, fontSize:`clamp(1rem, 2vw, 2rem)`}}>{activeProdCat == 'all'?'All Products Category':activeProdCat.charAt(0).toUpperCase()+activeProdCat.slice(1) + ' Category'}</h3>
                    <div id="cont">
                        <p>Sort By:</p>
                        <ul>
                            <li className={sortState=='relevance'? "active-sort": ''}
                                onClick={()=>{setSortState('relevance')}}
                            >Relevance</li>
                            <li id="remove" className={sortState=='high'? "active-sort": ''}
                                onClick={()=>{setSortState('high')}}
                            >Price - High To Low</li>
                            <li className={sortState=='low'? "active-sort": ''}
                                onClick={()=>{setSortState('low')}}
                            >Price - Low To High</li>
                        </ul>
                    </div>
                    <div className='filter-banner'>
                        <button class="btn filter-sm" type="button" data-bs-toggle="offcanvas" data-bs-target="#staticBackdrop" aria-controls="staticBackdrop">
                            <svg  xmlns="http://www.w3.org/2000/svg" width="12" height="16" fill="#ffff" class="bi bi-funnel-fill" viewBox="0 0 16 16">
                                <path d="M1.5 1.5A.5.5 0 0 1 2 1h12a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.128.334L10 8.692V13.5a.5.5 0 0 1-.342.474l-3 1A.5.5 0 0 1 6 14.5V8.692L1.628 3.834A.5.5 0 0 1 1.5 3.5z"/>
                            </svg>
                            <span className='text-light'> FILTER</span>
                        </button>
                        <button class="btn filter-sm" type="button" data-bs-toggle="offcanvas" data-bs-target="#staticBackdrop" aria-controls="staticBackdrop">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="16" fill="#ffff" class="bi bi-arrow-down-up" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5"/>
                            </svg>
                            <span className='text-light'> SORT</span>
                        </button>
                        <div class="offcanvas offcanvas-start w-75" data-bs-backdrop="static" tabindex="-1" id="staticBackdrop" aria-labelledby="staticBackdropLabel">
                            <div class="offcanvas-header">
                                <h5 class="offcanvas-title" id="staticBackdropLabel">Browse Categories</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                            </div>
                            <div class="offcanvas-body bg-body-primary" >
                                <div>
                                <div id="">
                                    <div className="browseFlex">
                                        <span><FontAwesomeIcon icon={faMinus} style={{color: "#050505"}} /></span>
                                    </div>
                                    <div className='price-filter'>
                                        <h4>Custom Price Range</h4>
                                        <form action="">
                                            <div>
                                                <FontAwesomeIcon icon={faNairaSign} />
                                                <input type="text" placeholder='Min' name="" id="" />
                                            </div>
                                            <div>
                                                <FontAwesomeIcon icon={faNairaSign} />
                                                <input type="text" placeholder='Max' name="" id="" />
                                            </div>
                                            <button>GO</button>
                                        </form>
                                    </div>
                                    <div className="browseFlex">
                                    <h3>Brand</h3>
                                    <span><FontAwesomeIcon icon={faMinus} style={{color: "#050505"}} /></span>
                                    {/* <span><i className="fa-solid fa-minus" style="color: #050505;"></i></span> */}
                                    </div>
                                    <div className="searchBrand-cont">
                                        <input type="text" onChange={(e)=>{findBrand(e.target.value)}} placeholder='Search Brand...' />
                                        <FontAwesomeIcon icon={faSearch} style={{color: '#b1acaf'}} />
                                    </div>
                                    <div className='sort-checkbox'>
                                        {
                                            
                                            product_list.length == 0?
                                            Array(2).fill(0).map((_, i)=>{

                                                return <div key={i}>
                                                            <span><Skeleton width={30+'%'} count={5} /></span>
                                                        </div>
                                            })
                                            :
                                            Array.from(currentFilteredBrands).map((brand,index)=>{
                                                // if(product_list.length > 0){
                                                //         console.log('empty')
                                                // }
                                                // console.log(Array.from(currentFilteredBrands).length)
                                                
                                                    return <div className="inputP" key={index}>
                                                                <input type="checkbox" value={brand} name="chk" key={index} checked={checked.includes(brand)}
                                                                    onChange={()=>{handleChange(brand)}}
                                                                />
                                                                <p>{brand}</p>
                                                        </div>

                                            })
                                        }
                                    </div>
                                </div>
                                </div>
                            </div>
                        </div>
                </div>
                </div>

            </div>
            <section id="sect">
                <div className="browseCategory">
                    <div id="browseCont">
                        <div id="white">
                            <div className="browseFlex align-items-center">
                                <h3 style={{fontSize:'16px'}}>Browse Categories</h3> 
                                <span><FontAwesomeIcon icon={faMinus} style={{color: "#050505"}} /></span>
                            </div>
                            <ul id="tablets">
                                <li>Mobile Phones and Accessories</li>
                                <li>Mobile Phones</li>
                                <li>Tablet Accessories</li>
                                <li>Desk, Radio & Intercom Phones</li>
                                <li>Tablets</li>
                                <li>Phone & Tablet Bundles</li>
                            </ul>
                            <hr/>
                            <div className="browseFlex align-items-center">
                                <h3 style={{fontSize:'16px'}}>Price</h3>
                                <span><FontAwesomeIcon icon={faMinus} style={{color: "#050505"}} /></span>
                                {/* <span><i className="fa-solid fa-minus" style="color: #050505;"></i></span> */}
                                
                            </div>
                            <div>
                                <div className="inputP">
                                    <input type="checkbox" name="" id="" />
                                    <p>Under N2000</p>
                                </div>
                                <div className="inputP">
                                    <input type="checkbox" name="" id="" />
                                    <p>N2000 - N5000</p>
                                </div>
                                <div className="inputP">
                                    <input type="checkbox" name="" id="" />
                                    <p>N5000 - N10000</p>
                                </div>
                                <div className="inputP">
                                    <input type="checkbox" name="" id="" />
                                    <p>N10000 - N20000</p>
                                </div>
                                <div className="inputP">
                                    <input type="checkbox" name="" id="" />
                                    <p>N20000 - N40000</p>
                                </div>
                                <div className="inputP">
                                    <input type="checkbox" name="" id="" />
                                    <p>Above N40000</p>
                                </div>
                                <div className='price-filter'>
                                    <h4 style={{fontSize:'16px'}}>Custom Price Range</h4>
                                    <form action="">
                                        <div className='d-flex align-items-center' >
                                            <FontAwesomeIcon icon={faNairaSign} />
                                            <input type="text" placeholder='Min' name="" id="" />
                                        </div>
                                        <div  className='d-flex align-items-center'>
                                            <FontAwesomeIcon icon={faNairaSign} />
                                            <input type="text" placeholder='Max' name="" id="" />
                                        </div>
                                        <button>GO</button>
                                    </form>
                                </div>
                                <div className="browseFlex" >
                                <h3 style={{fontSize:'16px'}}>Brand</h3>
                                <span><FontAwesomeIcon icon={faMinus} style={{color: "#050505"}} /></span>
                                {/* <span><i className="fa-solid fa-minus" style="color: #050505;"></i></span> */}
                                </div>
                                <div className="searchBrand-cont">
                                    <input type="text" onChange={(e)=>{findBrand(e.target.value)}} placeholder='Search Brand...' />
                                    <FontAwesomeIcon icon={faSearch} style={{color: '#b1acaf'}} />
                                </div>
                                <div className='sort-checkbox'>
                                    {
                                        
                                        product_list.length == 0?
                                        Array(2).fill(0).map((_, i)=>{

                                            return <div key={i}>
                                                        <span><Skeleton width={30+'%'} count={5} /></span>
                                                    </div>
                                        })
                                        :
                                        Array.from(currentFilteredBrands).map((brand,index)=>{
                                            // if(product_list.length > 0){
                                            //         console.log('empty')
                                            // }
                                            // console.log(Array.from(currentFilteredBrands).length)
                                            
                                                return <div className="inputP" key={index}>
                                                            <input type="checkbox" value={brand} name="chk" key={index} checked={checked.includes(brand)}
                                                                onChange={()=>{handleChange(brand)}}
                                                            />
                                                            <p>{brand}</p>
                                                    </div>

                                        })
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="main">
                        <div id="top">
                            <img src={topBanner} alt="" />
                        </div>
                        <div id="productCont">
                                {product_list.length === 0 || isLoading?
                                    Array(10)
                                    .fill(0).map((_, i)=>{
                                        // return <Product key={i} name={<Skeleton/>} price={<Skeleton/>}  image={<Skeleton />} id={<Skeleton/>}/>
                                        return  <div key={i}>
                                                    <div>
                                                        <div className="prodImg">
                                                            {/* {<Skeleton />} */}
                                                        </div>
                                                        <div className='prodDesc'>
                                                            <p>{<Skeleton />}</p>
                                                            <div className="prodPrice">
                                                                <h3>{<Skeleton />}</h3>
                                                                <p>{<Skeleton />}</p>
                                                            </div>
                                                            <p className="soldBy">{<Skeleton />}</p>
                                                            <div className="ratingCont">
                                                                <div>
                                                                    <FontAwesomeIcon icon={<Skeleton />} style={{color: '#dedede'}} />
                                                                    <FontAwesomeIcon icon={<Skeleton />} style={{color: '#dedede'}} />
                                                                    <FontAwesomeIcon icon={<Skeleton />} style={{color: '#dedede'}} />
                                                                    <FontAwesomeIcon icon={<Skeleton />} style={{color: '#dedede'}} />
                                                                    <FontAwesomeIcon icon={<Skeleton />} style={{color: '#dedede'}} />
                                                                </div>
                                                                <p>{<Skeleton />}</p>
                                                            </div>
                                                            <div className="prodBtn">{<Skeleton />}</div>
                                                        </div>
                                                    </div>  
                                                </div>
                                    })
                                    :
                                    product_list.slice(start, end).map((prod, index)=>{
                                        if(isActiveCheckBox){
                                                // const brand = [...checked]
                                                let brands
                                                if( activeProdCat == 'all' || activeProdCat == prod.Product_category ){
                                                    brands = checked.map((b, i)=>{
                                                        if(prod.Product_Brand==b){
                                                            // render product based on sortState- if sortState filter is off, that is; == 'relevance'
                                                            if(sortState == 'relevance'){
                                                                return <Product key={i} name={prod.Product_Name} price={prod.Product_Price}  image={prod.Product_Image[0]} index={index} id={prod.id} />
                                                            }
                                                            
                                                        }
                                                    })
                                                }
                                                return <>{brands}</>
                                        }
                                    
                                        else{
                                            if( activeProdCat == 'all' || activeProdCat == prod.Product_category ){
                                                let sortedList;
                                                        if(sortState == 'relevance'){
                                                            console.log('sortState:', sortState)
                                                            return <Product key={index} name={prod.Product_Name} price={prod.Product_Price} category={prod.Product_category} image={prod.Product_Image[0]}  index={index} id={prod.id} />
                                                        }
                                                        else if(sortState == 'high'){
                                                            console.log('sortState:', sortState)
                                                            sortedList = product_list.sort((a, b)=>{
                                                                return a.Product_Price - b.Product_Price
                                                                
                                                            })
                                                            
                                                            sortedList.map((list, i)=>{
                                                                return <Product key={list.id} name={list.Product_Name} price={list.Product_Price} category={list.Product_category} image={list.Product_Image[0]}  index={index} id={list.id} />
                                                            })
                                                        
                                                        }
                                                }
                                                
                                        }
                                    })
                            
                            }
                                
                        </div>
                        <div>
                            <div className='d-flex justify-content-center align-items-center'>
                                {
                                    !currentPage == 0
                                    &&
                                    <span onClick={()=>goToPrev()} style={{background:'#ed017f', width:'', height:'30px', padding:'5px', margin:'10px', borderRadius:'4px', color:'white', cursor:'pointer', fontSize:'12px', alignItems:'center'}}><FontAwesomeIcon style={{fontSize: '12px'}} icon={faChevronLeft}/> Prev </span>
                                }
                                {
                                    
                                    [...Array(numOfPages).keys()].map((pag, i)=>{
                                      
                                        return <span key={i} onClick={()=>{setCurrentPage(parseInt(pag))}} style={{border:'solid .5px #ed017f', color: currentPage==pag?'white' :'#ed017f', width:'20px', height:'30px', padding:'5px', margin:'10px', borderRadius:'4px', cursor:'pointer', fontSize: '12px', backgroundColor:currentPage==pag?'#ed017f':'white'}}>{pag}</span>
                                    })
                                }
                                {
                                    currentPage < (numOfPages -1)&&
                                    <span onClick={()=>goToNext()} style={{background:'#ed017f', width:'', height:'30px', padding:'5px', margin:'10px', borderRadius:'4px', color:'white', cursor:'pointer', fontSize:'12px'}}>Next <FontAwesomeIcon style={{fontSize: '12px'}} icon={faChevronRight}/></span>
                                }
                                
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </>

  )
}

export default Products
